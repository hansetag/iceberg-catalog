services:
  jupyter:
    image: quay.io/jupyter/pyspark-notebook:2024-06-04
    depends_on:
      server:
        condition: service_healthy
    command: start-notebook.sh --NotebookApp.token=''
    volumes:
      - ./notebooks:/home/jovyan/examples/
    networks:
      iceberg_net:
    ports:
      - "8888:8888"

  server:
    image: localhost/iceberg-catalog-local:latest
    environment:
      - ICEBERG_REST__BASE_URI=http://server:8080/catalog/
      - ICEBERG_REST__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - ICEBERG_REST__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:5432/postgres
      - ICEBERG_REST__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:5432/postgres
      - ICEBERG_REST__DEFAULT_PROJECT_ID=00000000-0000-0000-0000-000000000000
      - RUST_LOG=trace,axum=info,tower=info
    entrypoint: [ "./iceberg-catalog", "serve" ]
    healthcheck:
      test: [ "CMD", "/home/nonroot/iceberg-catalog", "healthcheck" ]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 3s
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      iceberg_net:
    ports:
      - "8080:8080"

  migrate:
    image: localhost/iceberg-catalog-local:latest
    environment:
      - ICEBERG_REST__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - ICEBERG_REST__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:5432/postgres
      - ICEBERG_REST__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:5432/postgres
      - RUST_LOG=info
    restart: "no"
    entrypoint: [ "/home/nonroot/iceberg-catalog", "migrate" ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      iceberg_net:

  initialproject:
    image: curlimages/curl
    depends_on:
      server:
        condition: service_healthy
    restart: "no"
    command:
      - -w
      - "%{http_code}"
      - "-X"
      - "POST"
      - "-v"
      - "http://server:8080/management/v1/warehouse"
      - "-H"
      - "Content-Type: application/json"
      - "--data"
      - "@create-default-warehouse.json"
      - "-o"
      - "/dev/null"
    volumes:
      - ./create-default-warehouse.json:/home/curl_user/create-default-warehouse.json
    networks:
      iceberg_net:

  db:
    image: bitnami/postgresql:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGUSER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5432 -d postgres" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    networks:
      iceberg_net:
    ports:
      - 2345:5432
  minio:
    image: bitnami/minio:latest
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
      - MINIO_API_PORT_NUMBER=9000
      - MINIO_CONSOLE_PORT_NUMBER=9001
      - MINIO_SCHEME=http
      - MINIO_DEFAULT_BUCKETS=examples
    healthcheck:
      test: [ "CMD", "mc", "ls", "local", "|", "grep", "examples" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 15s
    networks:
      iceberg_net:
networks:
  iceberg_net:
