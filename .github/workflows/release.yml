name: ðŸš€ Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]
    branches:
    - 'patch/ci-release-*'
  pull_request:
    paths:
    - '.github/workflows/release.yml'
  workflow_dispatch:

env:
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  # Publish the build output as CI artifact to inspect
  preview: ${{ !startsWith(github.ref, 'refs/tags/') || github.repository != 'hansetag/iceberg-catalog' }}

jobs:
  build:
    name: Build
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
          name: iceberg-catalog-x86_64-unknown-linux-gnu.tar.gz
          cross: false

        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
          name: iceberg-catalog-x86_64-unknown-linux-musl.tar.gz
          cross: false

        - target: aarch64-unknown-linux-musl
          os: ubuntu-latest
          name: iceberg-catalog-aarch64-unknown-linux-musl.tar.gz
          cross: true

        - target: aarch64-apple-darwin
          os: macos-14
          name: iceberg-catalog-aarch64-apple-darwin.tar.gz
          cross: false

        - target: x86_64-pc-windows-msvc
          os: windows-latest
          name: iceberg-catalog-x86_64-pc-windows-msvc.zip
          rustflags: -C target-feature=+crt-static
          cross: false

        - target: aarch64-pc-windows-msvc
          os: windows-latest
          name: iceberg-catalog-aarch64-pc-windows-msvc.zip
          rustflags: -C target-feature=+crt-static
          cross: false

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        env:
          RUST_CACHE_KEY_OS:  rust-cache-${{ matrix.target }}

      - name: Install cross
        if: matrix.cross
        uses: taiki-e/install-action@cross

      - name: Test [Cargo]
        if: !matrix.cross
        run: cargo test --release --locked --target ${{ matrix.target }} --workspace

      - name: Test [Cross]
        if: matrix.cross
        run: cross test --release --locked --target ${{ matrix.target }} --workspace

      - name: Build [Cargo]
        if: !matrix.cross
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Build [Cross]
        if: matrix.cross
        run: cross build --release --locked --target ${{ matrix.target }}

      - name: Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} iceberg-catalog.exe
          cd -

      - name: Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} iceberg-catalog.exe
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

# This is currently very slow. Switch to ARM workers once they are finally available
# in gh actions!
# - name: Build Docker image (arm64)
#   run: |
#     DOCKER_BUILDKIT=1 docker build \
#       --platform linux/arm64 -t iceberg-catalog-local:arm64 \
#       --add-host=host.docker.internal:host-gateway \
#       -f docker/full.Dockerfile \
#       --build-arg DATABASE_URL=postgres://postgres:postgres@host.docker.internal:5432/postgres .
#     docker save -o /tmp/iceberg-catalog-arm64.tar iceberg-catalog-local:arm64

# ToDo: Use action instead of manual build.
# The snippet below couldn't resolve the host.docker.internal / host-gateway.
# - name: Build Docker image (amd64)
#   uses: docker/build-push-action@v5
#   id: build-amd64
#   with:
#     context: .
#     load: true
#     platforms: linux/amd64
#     file: docker/full.Dockerfile
#     outputs: type=docker,dest=/tmp/iceberg-catalog-amd64.tar
#     # cache-from: type=gha
#     # cache-to: type=gha,mode=max
#     add-hosts: "host.docker.internal:host-gateway"
#     build-args: |
#       "DATABASE_URL=postgres://postgres:postgres@host.docker.internal:5432/postgres"
#     tags: iceberg-catalog-local:amd64