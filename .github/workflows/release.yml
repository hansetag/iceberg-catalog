name: ðŸš€ Release

on:
  push:
    branches:
    - main
  pull_request:
    paths:
    - '.github/workflows/release.yml'
  workflow_dispatch:

env:
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  # Publish the build output as CI artifact to inspect
  preview: ${{ !startsWith(github.ref, 'refs/tags/') || github.repository != 'hansetag/iceberg-catalog' }}

permissions:
  contents: write
  pull-requests: write

jobs:
  # Update release PR
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.repository == 'hansetag/iceberg-catalog'
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs['crates/iceberg-catalog--tag_name'] }}
      major: ${{ steps.release.outputs['crates/iceberg-catalog--major'] }}
      minor: ${{ steps.release.outputs['crates/iceberg-catalog--minor'] }}
      patch: ${{ steps.release.outputs['crates/iceberg-catalog--patch'] }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please/release-please-config.json
          manifest-file: release-please/.release-please-manifest.json

  build-binary:
    name: Build Binary
    needs:
      - release_please
    # not supported by windows nor macos
    # services:
    #   postgres:
    #     image: postgres:16
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
          name: iceberg-catalog-x86_64-unknown-linux-gnu.tar.gz
          cross: false

        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
          name: iceberg-catalog-x86_64-unknown-linux-musl.tar.gz
          cross: true

        - target: aarch64-unknown-linux-musl
          os: ubuntu-latest
          name: iceberg-catalog-aarch64-unknown-linux-musl.tar.gz
          cross: true

        # Currently disabled due to https://github.com/actions/runner-images/issues/9460
        # Which prevents us from launching postgres via docker / colima
        # - target: aarch64-apple-darwin
        #   os: macos-14
        #   name: iceberg-catalog-aarch64-apple-darwin.tar.gz
        #   cross: false

        - target: x86_64-pc-windows-msvc
          os: windows-latest
          name: iceberg-catalog-x86_64-pc-windows-msvc.zip
          rustflags: -C target-feature=+crt-static
          cross: false

        - target: aarch64-pc-windows-msvc
          os: windows-latest
          name: iceberg-catalog-aarch64-pc-windows-msvc.zip
          rustflags: -C target-feature=+crt-static
          cross: false

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          cache: false
      
      # - name: Setup docker (missing on MacOS)
      #   if: matrix.os == 'macos-14'
      #   run: |
      #     brew install docker
      #     # Docker on macOS misses daemon due to licensing, so install colima as runtime
      #     brew install colima
      #     colima start

      - name: Run postgres
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker run -d --name postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=postgres -p 5432:5432 postgres:16
          docker ps -a

      - name: Install cross
        if: matrix.cross == true
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build [Cargo]
        if: matrix.cross == false
        run: cargo build --all-features --release --locked --target ${{ matrix.target }}

      - name: Build [Cross]
        if: matrix.cross == true
        run: cross build --all-features --release --locked --target ${{ matrix.target }}

      - name: Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} iceberg-catalog.exe
          cd -

      - name: Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} iceberg-catalog
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.name }}
          path: ${{ matrix.name }}

  build-docker:
    name: Build Docker
    runs-on: ubuntu-latest
    needs: 
      - build-binary
      - release_please
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: List Artifacts
        run: ls -lh

      - name: Restore Binaries
        run: |
          cd bin-iceberg-catalog-x86_64-unknown-linux-gnu.tar.gz
          tar xzvf iceberg-catalog-x86_64-unknown-linux-gnu.tar.gz
          cd -
          cd bin-iceberg-catalog-aarch64-unknown-linux-musl.tar.gz
          tar xzvf iceberg-catalog-aarch64-unknown-linux-musl.tar.gz
          ls -Rlh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker info
        run: docker info

      - name: Build Docker image (amd64)
        run: |
          DOCKER_BUILDKIT=1 docker build -t localhost/iceberg-catalog-local:amd64 \
            -f docker/bin.Dockerfile \
            --build-arg "ARCH=amd64" \
            --build-arg "EXPIRES=${{ needs.release_please.outputs.releases_created == 'true' && 'Never' || '4w' }}" \
            --build-arg "BIN=bin-iceberg-catalog-x86_64-unknown-linux-gnu.tar.gz/iceberg-catalog" .
          docker save -o /tmp/docker-iceberg-catalog-amd64.tar localhost/iceberg-catalog-local:amd64

      - name: Build Docker image (arm64)
        run: |
          DOCKER_BUILDKIT=1 docker build \
            --platform linux/arm64 -t localhost/iceberg-catalog-local:arm64 \
            -f docker/bin.Dockerfile \
            --build-arg "ARCH=arm64" \
            --build-arg "EXPIRES=${{ needs.release_please.outputs.releases_created == 'true' && 'Never' || '4w' }}" \
            --build-arg "BIN=bin-iceberg-catalog-aarch64-unknown-linux-musl.tar.gz/iceberg-catalog" .
          docker save -o /tmp/docker-iceberg-catalog-arm64.tar localhost/iceberg-catalog-local:arm64

      - name: Test Docker (amd64)
        run: |
          cd tests
          docker compose run --quiet-pull spark /opt/entrypoint.sh bash -c "cd /opt/tests && bash run_pyiceberg_and_spark.sh"
          docker compose rm --force
        env:
          ICEBERG_REST_TEST_SERVER_IMAGE: localhost/iceberg-catalog-local:amd64
          ICEBERG_REST_TEST_SPARK_IMAGE: apache/spark:3.5.1-java17-python3

      - name: Test Docker (arm64)
        run: |
          cd tests
          docker compose run --quiet-pull spark /opt/entrypoint.sh bash -c "cd /opt/tests && bash run_pyiceberg_and_spark.sh"
        env:
          ICEBERG_REST_TEST_SERVER_IMAGE: localhost/iceberg-catalog-local:arm64
          ICEBERG_REST_TEST_SPARK_IMAGE: apache/spark:3.5.1-java17-python3

      - name: Save Docker
        uses: actions/upload-artifact@v4
        with:
          name: docker-iceberg-catalog
          path: /tmp/docker-iceberg-catalog-*.tar

      - name: Test Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: hansetag+githubicebergcatalog
          password: ${{ secrets.QUAY_PASSWORD }}

  debug:
    name: Debug Artifacts
    runs-on: ubuntu-latest
    needs:
      - build-binary
      - build-docker
      - release_please
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: List Artifacts
        run: ls -Rlh
      
      - name: Inspect Docker
        run: |
          docker load -i docker-iceberg-catalog/docker-iceberg-catalog-amd64.tar
          docker load -i docker-iceberg-catalog/docker-iceberg-catalog-arm64.tar
          docker images
          docker inspect localhost/iceberg-catalog-local:amd64
          docker inspect localhost/iceberg-catalog-local:arm64
      
      - name: Release Please
        run: echo ${{ needs.release_please.outputs.tag_name }}

  publish-container-main:
    name: Publish Container (main branch)
    runs-on: ubuntu-latest
    needs:
      - build-docker
      - build-binary
      - release_please
    if: ${{ needs.release_please.outputs.releases_created != 'true' }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: hansetag+githubicebergcatalog
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Load Docker
        run: |
          docker load -i docker-iceberg-catalog/docker-iceberg-catalog-amd64.tar
          docker load -i docker-iceberg-catalog/docker-iceberg-catalog-arm64.tar
          docker images
      
      - name: Push Full Tag to quay.io
        run: |
          COMMIT_SHA=${GITHUB_SHA::8}  # Get the first 8 characters of the commit SHA
          docker tag localhost/iceberg-catalog-local:amd64 quay.io/hansetag/iceberg-catalog:${COMMIT_SHA}-amd64
          docker tag localhost/iceberg-catalog-local:arm64 quay.io/hansetag/iceberg-catalog:${COMMIT_SHA}-arm64
          docker push quay.io/hansetag/iceberg-catalog:${COMMIT_SHA}-amd64
          docker push quay.io/hansetag/iceberg-catalog:${COMMIT_SHA}-arm64
          docker manifest create quay.io/hansetag/iceberg-catalog:latest-main quay.io/hansetag/iceberg-catalog:${COMMIT_SHA}-amd64 quay.io/hansetag/iceberg-catalog:${COMMIT_SHA}-arm64
          docker manifest push quay.io/hansetag/iceberg-catalog:latest-main

  # Create GitHub release with Rust build targets and release notes
  publish-binary:
    name: Publish Binary
    runs-on: ubuntu-latest
    needs:
      - build-binary
      - build-docker
      - release_please
    if: ${{ needs.release_please.outputs.releases_created == 'true' }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Publish Release
        run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false --repo=hansetag/iceberg-catalog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v2
        with:
          files: bin-iceberg-catalog-*/iceberg-catalog-*
          tag_name: ${{ needs.release_please.outputs.tag_name }}

  publish-container:
    name: Publish Container
    runs-on: ubuntu-latest
    needs:
      - build-docker
      - build-binary
      - release_please
    if: ${{ needs.release_please.outputs.releases_created == 'true' }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: hansetag+githubicebergcatalog
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Load Docker
        run: |
          docker load -i docker-iceberg-catalog/docker-iceberg-catalog-amd64.tar
          docker load -i docker-iceberg-catalog/docker-iceberg-catalog-arm64.tar
          docker images
      
      - name: Push Full Tag to quay.io
        run: |
          docker tag localhost/iceberg-catalog-local:amd64 quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }}-amd64
          docker tag localhost/iceberg-catalog-local:arm64 quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }}-arm64
          docker push quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }}-amd64
          docker push quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }}-arm64
          docker manifest create quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }} quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }}-amd64 quay.io/hansetag/iceberg-catalog:${{ needs.release_please.outputs.tag_name }}-arm64
      
      - name: Check if Tag is vX.Y.Z
        id: check-tag
        run: |
          if [[ ${{ needs.release_please.outputs.tag_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi

      - name: Push Partial Tag to quay.io
        if: steps.check-tag.outputs.match == 'true'
        run: |
          docker tag localhost/iceberg-catalog-local:amd64 quay.io/hansetag/iceberg-catalog:latest-amd64
          docker tag localhost/iceberg-catalog-local:amd64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}-amd64
          docker tag localhost/iceberg-catalog-local:amd64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}-amd64
          docker tag localhost/iceberg-catalog-local:amd64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}-amd64
          docker tag localhost/iceberg-catalog-local:arm64 quay.io/hansetag/iceberg-catalog:latest-arm64
          docker tag localhost/iceberg-catalog-local:arm64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}-arm64
          docker tag localhost/iceberg-catalog-local:arm64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}-arm64
          docker tag localhost/iceberg-catalog-local:arm64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}-arm64
          docker push quay.io/hansetag/iceberg-catalog:latest-amd64
          docker push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}-amd64
          docker push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}-amd64
          docker push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}-amd64
          docker push quay.io/hansetag/iceberg-catalog:latest-arm64
          docker push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}-arm64
          docker push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}-arm64
          docker push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}-arm64
          docker manifest create quay.io/hansetag/iceberg-catalog:latest quay.io/hansetag/iceberg-catalog:latest-amd64 quay.io/hansetag/iceberg-catalog:latest-arm64
          docker manifest push quay.io/hansetag/iceberg-catalog:latest
          docker manifest create quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }} quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}-amd64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}-arm64
          docker manifest push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}
          docker manifest create quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }} quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}-amd64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}-arm64
          docker manifest push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}
          docker manifest create quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }} quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}-amd64 quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}-arm64
          docker manifest push quay.io/hansetag/iceberg-catalog:v${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}
