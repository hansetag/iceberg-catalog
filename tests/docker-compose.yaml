services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
    healthcheck:
      test: [ "CMD-SHELL", 'exec 3<>/dev/tcp/127.0.0.1/8080;echo -e "GET /realms/test/.well-known/openid-configuration HTTP/1.1\r\nhost: localhost:8080\r\nConnection: close\r\n\r\n" >&3;grep "jwks_uri"  <&3' ]
      interval: 2s
      timeout: 80s
      retries: 2
      start_period: 40s
    ports:
      - "31100:8080"
    command: [ "start-dev", "--metrics-enabled=true", "--health-enabled=true",  "--import-realm" ]
    networks:
      - iceberg_rest_tests

  spark:
    image: ${ICEBERG_REST_TEST_SPARK_IMAGE}
    profiles:
      - spark
    user: root
    environment:
      - ICEBERG_REST_TEST_S3_BUCKET=tests
      - ICEBERG_REST_TEST_S3_ACCESS_KEY=minio-root-user
      - ICEBERG_REST_TEST_S3_SECRET_KEY=minio-root-password
      - ICEBERG_REST_TEST_S3_ENDPOINT=http://minio:9000
      - ICEBERG_REST_TEST_S3_PATH_STYLE_ACCESS=1
      - ICEBERG_REST_TEST_S3_REGION=local
      - ICEBERG_REST_TEST_MANAGEMENT_URL=http://server:8080/management
      - ICEBERG_REST_TEST_CATALOG_URL=http://server:8080/catalog
      - ICEBERG_REST_TEST_OPENID_PROVIDER_URI=http://keycloak:8080/realms/test/
      - ICEBERG_REST_TEST_OPENID_CLIENT_ID=iceberg-rest-test
      - ICEBERG_REST_TEST_OPENID_CLIENT_SECRET=very-secret
      - ICEBERG_REST_TEST_TRINO_URI=http://trino:8080
      - ICEBERG_REST_TEST_STARROCKS_URI=starrocks://root@starrocks:9030
      - ICEBERG_REST_TEST_AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - ICEBERG_REST_TEST_AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - ICEBERG_REST_TEST_AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - ICEBERG_REST_TEST_AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}
      - ICEBERG_REST_TEST_AZURE_STORAGE_FILESYSTEM=${AZURE_STORAGE_FILESYSTEM}
    depends_on:
      server:
        condition: service_healthy
      trino:
        condition: service_healthy
      starrocks:
        condition: service_healthy
    volumes:
      - .:/opt/tests
    networks:
      - iceberg_rest_tests

  migrate:
    image: ${ICEBERG_REST_TEST_SERVER_IMAGE}
    environment:
      - ICEBERG_REST__PG_ENCRYPTION_KEY=abc
      - ICEBERG_REST__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:2345/postgres
      - ICEBERG_REST__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:2345/postgres
      - RUST_LOG=trace,axum=trace
    restart: "no"
    command: [ "migrate" ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - iceberg_rest_tests

  server:
    image: ${ICEBERG_REST_TEST_SERVER_IMAGE}
    environment:
      - ICEBERG_REST__BASE_URI=http://server:8080
      - ICEBERG_REST__PG_ENCRYPTION_KEY=abc
      - ICEBERG_REST__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:2345/postgres
      - ICEBERG_REST__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:2345/postgres
      - ICEBERG_REST__NATS_URI=nats://nats:4222
      - ICEBERG_REST__NATS_TOPIC=changes
      - ICEBERG_REST__NATS_USER=test
      - ICEBERG_REST__NATS_PASSWORD=test
      - ICEBERG_REST__OPENID_PROVIDER_URI=http://keycloak:8080/realms/test/
      - RUST_LOG=trace,axum=trace,reqwest=trace
    command: [ "serve" ]
    healthcheck:
      test: [ "CMD", "/home/nonroot/iceberg-catalog", "healthcheck" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      nats:
        condition: service_started
      keycloak:
        condition: service_healthy
    ports:
      - 31101:8080
    networks:
      - iceberg_rest_tests

  db:
    image: bitnami/postgresql:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGUSER=postgres
      - POSTGRESQL_PORT_NUMBER=2345
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 2345 -d postgres" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - "31102:2345"
    networks:
      - iceberg_rest_tests

  minio:
    image: bitnami/minio:latest
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
      - MINIO_API_PORT_NUMBER=9000
      - MINIO_CONSOLE_PORT_NUMBER=9001
      - MINIO_SCHEME=http
      - MINIO_DEFAULT_BUCKETS=tests
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://localhost:9000/minio/health/live" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - "31103:9000"
      - "31104:9001"
    networks:
      - iceberg_rest_tests

  nats:
    image: bitnami/nats:latest
    command: [ "nats-server",  "-m=8222", "--user=test", "--pass=test" ]
    ports:
      - "31105:4222"
    healthcheck:
      test: [ "CMD-SHELL", 'exec 3<>/dev/tcp/127.0.0.1/8222;echo -e "HEAD / HTTP/1.1\r\nhost: localhost:8222\r\nConnection: close\r\n\r\n" >&3;grep "HTTP/1.1 200 OK"  <&3' ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    networks:
      - iceberg_rest_tests

  trino:
    image: trinodb/trino:latest
    environment:
      - CATALOG_MANAGEMENT=dynamic
      - ICEBERG_REST_TEST_CATALOG_URL=http://server:8080/catalog
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:8080/v1/status"]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - "9999:8080"
    networks:
      - iceberg_rest_tests
    depends_on:
      db:
        condition: service_healthy

  starrocks:
    image: starrocks/allin1-ubuntu:3.3.2
    environment:
      - CATALOG_MANAGEMENT=dynamic
      - ICEBERG_REST_TEST_CATALOG_URL=http://server:8080/catalog
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://starrocks:8030/api/health" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - "39030:9030"
      - "38030:8030"
    networks:
      - iceberg_rest_tests

networks:
  iceberg_rest_tests: