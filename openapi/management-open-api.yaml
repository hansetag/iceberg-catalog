openapi: 3.0.3
info:
  title: iceberg-catalog
  description: |
    Implementation of the Iceberg REST Catalog server.
  license:
    name: Apache-2.0
  version: 0.3.0
paths:
  /management/v1/project:
    get:
      tags:
      - management
      summary: List all existing projects
      operationId: list_projects
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListProjectsResponse'
  /management/v1/warehouse:
    get:
      tags:
      - management
      summary: List all warehouses in a project
      description: |-
        By default, this endpoint does not return deactivated warehouses.
        To include deactivated warehouses, set the `include_deactivated` query parameter to `true`.
      operationId: list_warehouses
      parameters:
      - name: warehouse-status
        in: query
        description: |-
          Optional filter to return only warehouses
          with the specified status.
          If not provided, only active warehouses are returned.
        required: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WarehouseStatus'
          nullable: true
      - name: project-id
        in: query
        description: |-
          The project ID to list warehouses for.
          Setting a warehouse is required.
        required: false
        schema:
          type: string
          format: uuid
          nullable: true
      responses:
        '200':
          description: List of warehouses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListWarehousesResponse'
    post:
      tags:
      - management
      summary: Create a new warehouse.
      description: |-
        Create a new warehouse in the given project. The project
        of a warehouse cannot be changed after creation.
        The storage configuration is validated by this method.
      operationId: create_warehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarehouseRequest'
        required: true
      responses:
        '201':
          description: Warehouse created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateWarehouseResponse'
  /management/v1/warehouse/{warehouse_id}:
    get:
      tags:
      - management
      summary: Get a warehouse by ID
      operationId: get_warehouse
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Warehouse details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetWarehouseResponse'
    delete:
      tags:
      - management
      summary: Delete a warehouse by ID
      operationId: delete_warehouse
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Warehouse deleted successfully
  /management/v1/warehouse/{warehouse_id}/activate:
    post:
      tags:
      - management
      summary: Activate a warehouse
      operationId: activate_warehouse
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Warehouse activated successfully
  /management/v1/warehouse/{warehouse_id}/deactivate:
    post:
      tags:
      - management
      summary: Deactivate a warehouse
      operationId: deactivate_warehouse
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Warehouse deactivated successfully
  /management/v1/warehouse/{warehouse_id}/deleted_tabulars:
    get:
      tags:
      - management
      summary: List soft-deleted tabulars
      description: List all soft-deleted tabulars in the warehouse that are visible to you.
      operationId: list_deleted_tabulars
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: List of soft-deleted tabulars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListDeletedTabularsResponse'
  /management/v1/warehouse/{warehouse_id}/rename:
    post:
      tags:
      - management
      summary: Rename a warehouse
      operationId: rename_warehouse
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameWarehouseRequest'
        required: true
      responses:
        '200':
          description: Warehouse renamed successfully
  /management/v1/warehouse/{warehouse_id}/storage:
    post:
      tags:
      - management
      summary: Update the storage profile of a warehouse
      operationId: update_storage_profile
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWarehouseStorageRequest'
        required: true
      responses:
        '200':
          description: Storage profile updated successfully
  /management/v1/warehouse/{warehouse_id}/storage-credential:
    post:
      tags:
      - management
      summary: Update the storage credential of a warehouse
      operationId: update_storage_credential
      parameters:
      - name: warehouse_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWarehouseCredentialRequest'
        required: true
      responses:
        '200':
          description: Storage credential updated successfully
components:
  schemas:
    AzCredential:
      oneOf:
      - type: object
        required:
        - client-id
        - tenant-id
        - client-secret
        - credential-type
        properties:
          client-id:
            type: string
          client-secret:
            type: string
          credential-type:
            type: string
            enum:
            - client-credentials
          tenant-id:
            type: string
      discriminator:
        propertyName: credential-type
    AzdlsProfile:
      type: object
      required:
      - filesystem
      - account-name
      properties:
        account-name:
          type: string
          description: Name of the azure storage account.
        authority-host:
          type: string
          format: uri
          description: 'The authority host to use for authentication. Default: `https://login.microsoftonline.com`.'
          nullable: true
        filesystem:
          type: string
          description: Name of the azdls filesystem, in blobstorage also known as container.
        host:
          type: string
          description: 'The host to use for the storage account. Default: `dfs.core.windows.net`.'
          nullable: true
        key-prefix:
          type: string
          description: |-
            Subpath in the filesystem to use.
            The same prefix can be used for multiple warehouses.
          nullable: true
        sas-token-validity-seconds:
          type: integer
          format: int64
          description: 'The validity of the sas token in seconds. Default: 3600.'
          nullable: true
          minimum: 0
    CreateWarehouseRequest:
      type: object
      required:
      - warehouse-name
      - project-id
      - storage-profile
      properties:
        delete-profile:
          $ref: '#/components/schemas/TabularDeleteProfile'
        project-id:
          type: string
          format: uuid
          description: Project ID in which to create the warehouse.
        storage-credential:
          allOf:
          - $ref: '#/components/schemas/StorageCredential'
          nullable: true
        storage-profile:
          $ref: '#/components/schemas/StorageProfile'
        warehouse-name:
          type: string
          description: |-
            Name of the warehouse to create. Must be unique
            within a project.
    CreateWarehouseResponse:
      type: object
      required:
      - warehouse-id
      properties:
        warehouse-id:
          type: string
          format: uuid
          description: ID of the created warehouse.
    DeleteKind:
      type: string
      enum:
      - default
      - purge
    DeletedTabularResponse:
      type: object
      required:
      - id
      - name
      - namespace
      - typ
      - warehouse_id
      - created_at
      - deleted_at
      - expiration_date
      properties:
        created_at:
          type: string
          format: date-time
          description: Date when the tabular was created
        deleted_at:
          type: string
          format: date-time
          description: Date when the tabular was deleted
        expiration_date:
          type: string
          format: date-time
          description: Date when the tabular will not be recoverable anymore
        id:
          type: string
          format: uuid
          description: Unique identifier of the tabular
        name:
          type: string
          description: Name of the tabular
        namespace:
          type: array
          items:
            type: string
          description: List of namespace parts the tabular belongs to
        typ:
          $ref: '#/components/schemas/TabularType'
        warehouse_id:
          type: string
          format: uuid
          description: Warehouse ID where the tabular is stored
    GcsCredential:
      oneOf:
      - type: object
        required:
        - key
        - credential-type
        properties:
          credential-type:
            type: string
            enum:
            - service-account-key
          key:
            $ref: '#/components/schemas/GcsServiceKey'
      discriminator:
        propertyName: credential-type
    GcsProfile:
      type: object
      required:
      - bucket
      properties:
        bucket:
          type: string
          description: Name of the GCS bucket
        key-prefix:
          type: string
          description: |-
            Subpath in the bucket to use.
            The same prefix can be used for multiple warehouses.
          nullable: true
    GcsServiceKey:
      type: object
      required:
      - type
      - project_id
      - private_key_id
      - private_key
      - client_email
      - client_id
      - auth_uri
      - token_uri
      - auth_provider_x509_cert_url
      - client_x509_cert_url
      - universe_domain
      properties:
        auth_provider_x509_cert_url:
          type: string
        auth_uri:
          type: string
        client_email:
          type: string
        client_id:
          type: string
        client_x509_cert_url:
          type: string
        private_key:
          type: string
        private_key_id:
          type: string
        project_id:
          type: string
        token_uri:
          type: string
        type:
          type: string
        universe_domain:
          type: string
    GetWarehouseResponse:
      type: object
      required:
      - id
      - name
      - project-id
      - storage-profile
      - status
      properties:
        id:
          type: string
          format: uuid
          description: ID of the warehouse.
        name:
          type: string
          description: Name of the warehouse.
        project-id:
          type: string
          format: uuid
          description: Project ID in which the warehouse is created.
        status:
          $ref: '#/components/schemas/WarehouseStatus'
        storage-profile:
          $ref: '#/components/schemas/StorageProfile'
    ListDeletedTabularsResponse:
      type: object
      required:
      - tabulars
      properties:
        next_page_token:
          type: string
          description: Token to fetch the next page
          nullable: true
        tabulars:
          type: array
          items:
            $ref: '#/components/schemas/DeletedTabularResponse'
          description: List of tabulars
    ListProjectsResponse:
      type: object
      required:
      - projects
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectResponse'
          description: List of projects
    ListWarehousesRequest:
      type: object
      properties:
        project-id:
          type: string
          format: uuid
          description: |-
            The project ID to list warehouses for.
            Setting a warehouse is required.
          nullable: true
        warehouse-status:
          type: array
          items:
            $ref: '#/components/schemas/WarehouseStatus'
          description: |-
            Optional filter to return only warehouses
            with the specified status.
            If not provided, only active warehouses are returned.
          nullable: true
    ListWarehousesResponse:
      type: object
      required:
      - warehouses
      properties:
        warehouses:
          type: array
          items:
            $ref: '#/components/schemas/GetWarehouseResponse'
          description: List of warehouses in the project.
    ProjectResponse:
      type: object
      required:
      - project_id
      properties:
        project_id:
          type: string
          format: uuid
          description: ID of the project.
    RenameWarehouseRequest:
      type: object
      required:
      - new-name
      properties:
        new-name:
          type: string
          description: New name for the warehouse.
    S3Credential:
      oneOf:
      - type: object
        required:
        - aws-access-key-id
        - aws-secret-access-key
        - credential-type
        properties:
          aws-access-key-id:
            type: string
          aws-secret-access-key:
            type: string
          credential-type:
            type: string
            enum:
            - access-key
      discriminator:
        propertyName: credential-type
    S3Flavor:
      type: string
      enum:
      - aws
      - minio
    S3Profile:
      type: object
      required:
      - bucket
      - region
      - sts-enabled
      properties:
        assume-role-arn:
          type: string
          description: Optional ARN to assume when accessing the bucket
          nullable: true
        bucket:
          type: string
          description: Name of the S3 bucket
        endpoint:
          type: string
          format: uri
          description: |-
            Optional endpoint to use for S3 requests, if not provided
            the region will be used to determine the endpoint.
            If both region and endpoint are provided, the endpoint will be used.
            Example: `http://s3-de.my-domain.com:9000`
          nullable: true
        flavor:
          $ref: '#/components/schemas/S3Flavor'
        key-prefix:
          type: string
          description: |-
            Subpath in the bucket to use.
            The same prefix can be used for multiple warehouses.
          nullable: true
        path-style-access:
          type: boolean
          description: |-
            Path style access for S3 requests.
            If the underlying S3 supports both, we recommend to not set `path_style_access`.
          nullable: true
        region:
          type: string
          description: Region to use for S3 requests.
        sts-enabled:
          type: boolean
        sts-role-arn:
          type: string
          description: Optional role ARN to assume for sts vended-credentials
          nullable: true
    StorageCredential:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/S3Credential'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
              enum:
              - s3
      - allOf:
        - $ref: '#/components/schemas/AzCredential'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
              enum:
              - az
      - allOf:
        - $ref: '#/components/schemas/GcsCredential'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
              enum:
              - gcs
      description: Storage secret for a warehouse.
      discriminator:
        propertyName: type
    StorageProfile:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/AzdlsProfile'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
              enum:
              - azdls
      - allOf:
        - $ref: '#/components/schemas/S3Profile'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
              enum:
              - s3
      - allOf:
        - $ref: '#/components/schemas/GcsProfile'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
              enum:
              - gcs
      description: Storage profile for a warehouse.
      discriminator:
        propertyName: type
    TabularDeleteProfile:
      oneOf:
      - type: object
        required:
        - type
        properties:
          type:
            type: string
            enum:
            - hard
      - type: object
        required:
        - expiration_seconds
        - type
        properties:
          expiration_seconds:
            type: string
          type:
            type: string
            enum:
            - soft
      discriminator:
        propertyName: type
    TabularType:
      type: string
      description: Type of tabular
      enum:
      - table
      - view
    UpdateWarehouseCredentialRequest:
      type: object
      properties:
        new-storage-credential:
          allOf:
          - $ref: '#/components/schemas/StorageCredential'
          nullable: true
    UpdateWarehouseStorageRequest:
      type: object
      required:
      - storage-profile
      properties:
        storage-credential:
          allOf:
          - $ref: '#/components/schemas/StorageCredential'
          nullable: true
        storage-profile:
          $ref: '#/components/schemas/StorageProfile'
    WarehouseStatus:
      type: string
      description: Status of a warehouse
      enum:
      - active
      - inactive
tags:
- name: management
  description: Warehouse management operations

